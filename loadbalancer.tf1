##
#resource "aws_lb" "test" {
 # name               = "test-lb-tf"
  #internal           = false
  #load_balancer_type = "network"
  #subnets            = aws_subnet.public.*.id

  #enable_deletion_protection = true

  #tags = {
   # Environment = var.candidate
  #}
#}

resource "aws_alb" "test" {
  name               = "albtest"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.node.id]
  subnets            = [aws_subnet.public.id, aws_subnet.public1.id]

   tags = {
    Environment = var.candidate
  }
}
resource "aws_alb_listener" "testalblistener" {
  load_balancer_arn = aws_alb.test.arn
  port              = "80"
  protocol          = "HTTP"
  ssl_policy        = "ELBSecurityPolicy-2015-05"
  #certificate_arn   = "${var.ssl_arn}"

  default_action {
    target_group_arn = "${aws_alb_target_group.test.arn}"
    type             = "forward"
  }
}
resource "aws_alb_target_group" "test" {
  name     = "tf-example-lb-tg"
  port     = 80
  protocol = "HTTP"
  vpc_id   = aws_vpc.vpc.id
}

resource "aws_autoscaling_attachment" "asg_attachment_bar" {
  autoscaling_group_name = aws_autoscaling_group.asg.id
  alb_target_group_arn   = aws_alb_target_group.test.arn
}

resource "aws_alb_listener_rule" "albrule" {
  listener_arn = "${aws_alb_listener.testalblistener.arn}"
  priority     = 99

  action {
    type = "forward"
    target_group_arn = "${aws_alb_target_group.test.arn}"
  } 
  condition {
    path_pattern {
      values = ["/forward_to/*"]
    } 
  }
}